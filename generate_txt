{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"generate_txt","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPwPYHNK5nSS9t7WpMVUZ8r"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"U2_iE3OXx0iD"},"source":["from pathlib import Path\n","import numpy as np\n","import os\n","import random\n","\n","train_percent = float ( input ('Please enter training percentage of database (in decimals, recommended 0.8): '))\n","dataset_folder = str ( input ('Please enter dataset name: '))\n","home_path = str (Path(__file__).absolute()).rstrip('generate_txt.py')\n","\n","train_file = open (home_path + dataset_folder + '/train.txt', 'w')\n","valid_file = open (home_path + dataset_folder + '/valid.txt', 'w')\n","\n","#lists all files, checks if .jpg in name, if yes appends to list_of_images\n","files_list = os.listdir(home_path + dataset_folder + '/')\n","list_of_images = [f for f in files_list if '.jpg' in f]\n","\n","for img in list_of_images:\n","  img_txt = img.rstrip('.jpg')+\".txt\"\n","  #check for images with no .txt, which are the negative images introduced.\n","  if img_txt not in files_list:\n","    img_txtfile = open(os.path.join(home_path, dataset_folder, img_txt), \"w\")\n","    img_txtfile.close()\n","  #randomly allocates img to train or valid set\n","  if np.random.rand(1) < train_percent:\n","    train_file.write(home_path + dataset_folder + '/' + img + \"\\n\")\n","  else:\n","    valid_file.write(home_path + dataset_folder + '/' + img +  \"\\n\")\n","\n","train_file.close()\n","valid_file.close()\n","print ('train.txt and valid.txt generated')\n"],"execution_count":null,"outputs":[]}]}